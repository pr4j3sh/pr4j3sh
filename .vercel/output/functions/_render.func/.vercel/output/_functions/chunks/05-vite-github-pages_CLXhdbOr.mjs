const id = "05-vite-github-pages.md";
						const collection = "blog";
						const slug = "05-vite-github-pages";
						const body = "\nDeploying a static site can often seem daunting, but with Vite and GitHub Pages, it becomes a breeze. Here’s a step-by-step guide to setting up your Vite vanilla template for deployment using GitHub Pages, with an automated GitHub Actions workflow.\n\n## Configure Your Vite Project\n\nFirst, you'll need to adjust the `vite.config.js` to ensure your project builds correctly for GitHub Pages. Update your `vite.config.js` file to include the repository name in the `base` property:\n\n```javascript\nexport default {\n  base: \"/<repo_name>/\",\n};\n```\n\nReplace `<repo_name>` with your actual repository name.\n\n## Set Up GitHub Actions for Deployment\n\nCreate or modify your `.github/workflows/static.yml` file to define a workflow that automates deployment to GitHub Pages. Here's a simple workflow configuration:\n\n```yml\nname: Deploy static content to Pages\n\non:\n  push:\n    branches: [\"master\"]\n  workflow_dispatch:\n\npermissions:\n  contents: read\n  pages: write\n  id-token: write\n\nconcurrency:\n  group: \"pages\"\n  cancel-in-progress: true\n\njobs:\n  deploy:\n    environment:\n      name: github-pages\n      url: ${{ steps.deployment.outputs.page_url }}\n    runs-on: ubuntu-latest\n    steps:\n      - name: Checkout\n        uses: actions/checkout@v4\n      - name: Set up Node\n        uses: actions/setup-node@v4\n        with:\n          node-version: 20\n          cache: \"npm\"\n      - name: Install dependencies\n        run: npm ci\n      - name: Set environment variable\n        run: |\n\t\t    echo \"SECRET_ONE=${{ secrets.SECRET_ONE }}\" >> .env.local\n\t\t    echo \"SECRET_TWO=${{ secrets.SECRET_TWO }}\" >> .env.local\n\t\t    echo \"SECRET_THREE=${{ secrets.SECRET_THREE }}\" >> .env.local\n      - name: Build\n        run: npm run build\n      - name: Setup Pages\n        uses: actions/configure-pages@v4\n      - name: Upload artifact\n        uses: actions/upload-pages-artifact@v3\n        with:\n          path: \"./dist\"\n      - name: Deploy to GitHub Pages\n        id: deployment\n        uses: actions/deploy-pages@v4\n```\n\nReplace `SECRET_ONE`, `SECRET_TWO`, and `SECRET_THREE` with your actual secret names.\n\n## Add Environment Variables\n\nNavigate to your repository’s settings:\n\n- Go to `Settings > Secrets and variables > Actions`.\n- Click `New repository secret` for each secret you want to add.\n- Add secrets with the same name as used in `static.yml`.\n\n## Commit Your Changes\n\nMake sure to commit your `vite.config.js` and `static.yml` changes:\n\n```bash\ngit add vite.config.js .github/workflows/static.yml\ngit commit -m \"Configure Vite and GitHub Pages deployment\"\ngit push origin master\n```\n\nWith these steps, your Vite project is set up to automatically deploy to GitHub Pages with each push to the master branch, thanks to the powerful combination of Vite and GitHub Actions. Happy deploying\n\n";
						const data = {title:"Simplifying Deployment with Vite and GitHub Pages",description:"Efficiently deploy your Vite app to GitHub Pages with a streamlined GitHub Actions workflow",date:new Date(1725993000000)};
						const _internal = {
							type: 'content',
							filePath: "/home/prajesh/files/projects/elevenco/src/content/blog/05-vite-github-pages.md",
							rawData: undefined,
						};

export { _internal, body, collection, data, id, slug };
